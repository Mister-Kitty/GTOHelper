package com.gtohelper.solver;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class PioSolverTest {

    static ISolver solver = new PioSolver();
    final static String pioLocation = "C:\\PioSolver Edge\\PioSOLVER-edge.exe";

    @BeforeAll
    public static void setup() throws IOException {
        solver.connectAndInit(pioLocation);
    }

    @AfterAll
    public static void tearDown() {
        solver.disconnect();
    }

    @Test
    @Order(1)
    void setRangeTest() throws IOException {
        solver.setRange("IP", IPRange);
        solver.setRange("OOP", OOPRange);
    }

    @Test
    @Order(2)
    void initializeOptionsTest() throws IOException {
        int allInThresholdPercent = 67;
        int allInOnlyIfLessThanNPercent = 500;
        boolean forceOOPBet = false;
        boolean forceOOPCheckIPBet = false;

        solver.setPot(0, 0, 185);
        solver.setEffectiveStack(910);
        solver.setGameTreeOptions(allInThresholdPercent, allInOnlyIfLessThanNPercent, forceOOPBet, forceOOPCheckIPBet);
    }

    @Test
    @Order(3)
    void setBetsizes1Test() {
        solver.setIPFlop(false, false, "52", "2.5x");
        solver.setOOPFlop(false, "52", "2.5x");

        solver.setIPTurn(false, false, "52", "3x");
        solver.setOOPTurn(false, "52", "3x", "");

        solver.setIPRiver(false, false, "52", "3x");
        solver.setOOPRiver(false, "52", "3x", "");
    }

    @Test
    void buildGameTreeTest() throws IOException {
        setRangeTest();
        initializeOptionsTest();
        setBetsizes1Test();

        solver.buildTree();
    }

    @Test
    void getAllInLeavesTest() throws IOException {
        buildGameTreeTest();
        ArrayList<String> test1SolverResults = solver.getAllInLeaves();
        assert(test1SolverResults.size() == test1Results.size());
    }


    final ArrayList<String> test1Results = new ArrayList<String>(
            Arrays.asList("0 0 0 0 0 96 288 672 910",
        "0 0 0 0 96 288 672 910",
        "0 0 0 96 288 288 288 684 910",
        "0 0 0 96 288 288 684 910",
        "0 0 0 96 288 672 672 672 910",
        "0 0 0 96 288 672 910",
        "0 0 0 96 96 96 292 684 910",
        "0 0 96 288 288 288 684 910",
        "0 0 96 288 672 672 672 910",
        "0 0 96 288 672 672 910",
        "0 0 96 288 672 910",
        "0 0 96 96 292 684 910",
        "0 0 96 96 96 292 684 910",
        "0 96 240 240 240 240 240 586 910",
        "0 96 240 240 240 240 586 910",
        "0 96 240 240 240 586 586 586 910",
        "0 96 240 240 240 586 910",
        "0 96 240 240 586 586 586 910",
        "0 96 240 240 586 586 910",
        "0 96 240 240 586 910",
        "0 96 240 456 456 456 456 456 910",
        "0 96 240 456 456 456 456 910",
        "0 96 240 456 456 456 910",
        "0 96 240 456 780 780 780 780 780 910",
        "0 96 240 456 780 780 780 780 910",
        "0 96 240 456 780 780 780 910",
        "0 96 240 456 780 780 910",
        "0 96 240 456 780 910",
        "0 96 96 96 292 292 292 692 910",
        "0 96 96 96 292 684 684 684 910",
        "0 96 96 96 292 684 684 910",
        "0 96 96 96 292 684 910",
        "0 96 96 96 96 292 684 910",
        "0 96 96 96 96 96 292 684 910",
        "96 240 240 240 240 240 586 910",
        "96 240 240 240 240 586 910",
        "96 240 240 240 586 586 586 910",
        "96 240 240 240 586 910",
        "96 240 456 456 456 456 456 910",
        "96 240 456 456 456 456 910",
        "96 240 456 456 456 910",
        "96 240 456 456 910",
        "96 240 456 780 780 780 780 780 910",
        "96 240 456 780 780 780 780 910",
        "96 240 456 780 780 780 910",
        "96 240 456 780 910",
        "96 96 292 292 292 692 910",
        "96 96 292 292 692 910",
        "96 96 292 684 684 684 910",
        "96 96 292 684 910",
        "96 96 96 292 292 292 692 910",
        "96 96 96 292 684 684 684 910",
        "96 96 96 292 684 684 910",
        "96 96 96 292 684 910",
        "96 96 96 96 292 684 910",
        "96 96 96 96 96 292 684 910"));



    final String OOPRange = "0.9 0.9 0.9 0.9 0.9 0.9 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 1 1 1 0 0 0 0 0.8 0 0 0 0 0 0 0 0 0.8 0 0 1 0 0 0 0 0 0 0.8 0 1 1 0 0 0 0 0 0 0 " +
            "0.8 1 1 1 0 0 0 0 0.8 0 0 0 0.8 0 0 0 0 0 0 0 0 0.8 0 0 0 0.8 0 0 1 0 0 0 0 0 0 0.8 0 0 0 0.8 0 1 1 0 0 0 0 0 0 0 0.8 0 0 0 0.8 1 1 1 0 0 0 0 0.8 0 0 0 0.8 0 " +
            "0 0 0.8 0 0 0 0 0 0 0 0 0.8 0 0 0 0.8 0 0 0 0.8 0 0 1 0 0 0 0 0 0 0.8 0 0 0 0.8 0 0 0 0.8 0 1 1 0 0 0 0 0 0 0 0.8 0 0 0 0.8 0 0 0 0.8 1 1 1 0 0 0 0 0 0 0 0" +
            " 0.8 0 0 0 0.8 0 0 0 0.8 0 0 0 0 0 0 0 0 0 0 0 0 0.8 0 0 0 0.8 0 0 0 0.8 0 0 0.9 0 0 0 0 0 0 0 0 0 0 0.8 0 0 0 0.8 0 0 0 0.8 0 0.9 0.9 0 0 0 0 0 0 0 0 0 0 " +
            "0 0.8 0 0 0 0.8 0 0 0 0.8 0.9 0.9 0.9 0 0 0 0 0 0 0 0 0.9 0 0 0 0.8 0 0 0 0.8 0 0 0 0.8 1 1 1 0 0 0 0 0 0 0 0 0 0.9 0 0 0 0.8 0 0 0 0.8 0 0 1 0.8 1 1 0.5 0 0" +
            " 0 0 0 0 0 0 0 0 0.9 0 0 0 0.8 0 0 0 0.8 0 1 1 0.8 1 0.5 0.5 0 0 0 0 0 0 0 0 0 0 0 0.9 0 0 0 0.8 0 0 0 0.8 1 1 1 0.8 0.5 0.5 0.5 0 0 0 0 0 0 0 0 0 0 0 0 0.9 0" +
            " 0 0 0.9 0 0 0 0.8 1 1 1 0.8 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0.9 0 0 0 0.9 0 0 1 0.8 1 1 1 0.8 1 1 0.5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.9 0 0 0 0.9 0 1 1 0.8 1 1 " +
            "1 0.8 1 0.5 0.5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.9 0 0 0 0.9 1 1 1 0.8 1 1 1 0.8 0.5 0.5 0.5 0 0 0 0 0 0 0 0 0 0 0 0 0.9 0 0 0 1 0 0 0 0.9 0 0 0 0.8 1 1 1 0.8 1" +
            " 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0.9 0 0 0 1 0 0 0 0.9 0 0 1 0.8 1 1 1 0.8 1 1 0.3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.9 0 0 0 1 0 0 0 0.9 0 1 1 0.8 1 " +
            "1 1 0.8 1 0.3 0.3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.9 0 0 0 1 0 0 0 0.9 1 1 1 0.8 1 1 1 0.8 0.3 0.3 0.3 0 0 0 0 0.9 0 0 0 0.9 0 0 0 1 0 0 0 1 0 0 " +
            "0 1 0 0 0 0.9 0 0 0 0.8 1 1 1 0.8 1 1 1 0 0 0 0 0 0.9 0 0 0 0.9 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0.9 0 0 1 0.8 1 1 1 0.8 1 1 0.1 0 0 0 0 0 0 0.9 0 " +
            "0 0 0.9 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0.9 0 1 1 0.8 1 1 1 0.8 1 0.1 0.1 0 0 0 0 0 0 0 0.9 0 0 0 0.9 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0.9 1 1 1 0.8 1" +
            " 1 1 0.8 0.1 0.1 0.1 0.9 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 1 1 1 0.9 1 1 1 0.8 1 1 1 0.8 1 1 1 0 0.9 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 " +
            "1 0 0 0 1 0 0 1 1 1 1 1 0.9 1 1 1 0.8 1 1 1 0.8 1 1 0.1 0 0 0.9 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 1 1 1 1 1 1 0.9 1 1 1 0.8 1 1 1 0.8 1 0.1 0.1 0 0 " +
            "0 0.9 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0.9 1 1 1 0.8 1 1 1 0.8 0.1 0.1 0.1 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 1 1 1 1 " +
            "1 1 1 0.8 1 1 1 0.5 1 1 1 0.5 0.8 0.8 0.8 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0.8 1 1 1 0.5 1 1 0.8 0.5 0.8 0.8 0.1 0 0 1" +
            " 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 0.8 1 1 1 0.5 1 0.8 0.8 0.5 0.8 0.1 0.1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 1" +
            " 1 1 1 1 1 1 1 1 1 1 0.8 1 1 1 0.5 0.8 0.8 0.8 0.5 0.1 0.1 0.1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0.8 1 1 1 0.5 0.8 0.8 0.8" +
            " 0.1 0.5 0.5 0.5 0.1 0.1 0.1 0.1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0.8 1 1 0.8 0.5 0.8 0.8 0.5 0.1 0.5 0.5 0.1 0.1 0.1 " +
            "0.1 0.1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0.8 1 0.8 0.8 0.5 0.8 0.5 0.5 0.1 0.5 0.1 0.1 0.1 0.1 0.1 0.1 1 1 1 1 1 1 1 " +
            "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0.8 0.8 0.8 0.8 0.5 0.5 0.5 0.5 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1";

    final String IPRange = "1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 1 0 " +
            "0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0.5 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0.5 0 0 0 1 0 0 0 1 0 0 1 0 0 " +
            "0 0 0 0 0.5 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0.5 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0.5 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0 0 0 1 0 0 0 1 0 0 1 0" +
            " 0 0 0 0 0 0 0 0 0 0.5 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0.5 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0.3 0 0 0 1 0 0 0 1 0 0 0 1 0.3 0.3 0.3 0 0 0 0 0 0 0 " +
            "0 0 0.3 0 0 0 1 0 0 0 1 0 0 0.3 1 0.3 0.3 1 0 0 0 0 0 0 0 0 0 0 0.3 0 0 0 1 0 0 0 1 0 0.3 0.3 1 0.3 1 1 0 0 0 0 0 0 0 0 0 0 0 0.3 0 0 0 1 0 0 0 1 0.3 0.3 0.3 1 1 " +
            "1 1 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0 0 0 1 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0 0 0 1 " +
            "0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 0 0 " +
            "0 0 0 0 0 0 0 0 0 0 0" +
            " 0 0 0.3 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0 0 0 1 1" +
            " 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0.3 0 0 0 0.3 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0.3 0 0 0 0.3 0 0 0 1 0 0 0 1 0 0 0 1 0 0 1 1 " +
            "1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0.3 0 0 0 0.3 0 0 0 1 0 0 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0.3 0 0 0 0.3 0 0 0 1 0 0 0 1 0 0 0 1 1 1 1 " +
            "1 1 1 1 1 1 1 1 0.5 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0.5 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 1 1 " +
            "1 1 1 1 1 1 1 1 1 1 1 0 0 0.5 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0.5 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 " +
            "0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0.3 0.3 0.3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 " +
            "0 1 0 0 0.3 1 0.3 0.3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0.3 0.3 1 0.3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 " +
            "0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0.3 0.3 0.3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0.5 0.5 0.5 1 0.5 0.5 0.5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 " +
            "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0.5 1 0.5 0.5 0.5 1 0.5 0.5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0.5 " +
            "0.5 1 0.5 0.5 0.5 1 0.5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0.5 0.5 0.5 1 0.5 0.5 0.5 1 1 1 1 1 1 1 1 1 1 1 1 1 " +
            "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1";
}
